name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  smart-contracts:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile contracts
      run: npm run compile
      
    - name: Run smart contract tests
      run: npm test
      
    - name: Check contract size
      run: npx hardhat size-contracts
      continue-on-error: true

  frontend:
    name: Frontend Tests & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install backend dependencies
      run: npm ci
      
    - name: Install frontend dependencies
      run: cd voting-frontend && npm ci
      
    - name: Compile contracts (for ABI)
      run: npm run compile
      
    - name: Build frontend
      run: npm run build-frontend
      
    - name: Run frontend tests
      run: npm run test-frontend -- --watchAll=false
      continue-on-error: true

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [smart-contracts, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd voting-frontend && npm ci
        
    - name: Start Hardhat node
      run: npm run start-node &
      
    - name: Wait for node to start
      run: sleep 10
      
    - name: Deploy contracts
      run: npm run deploy
      
    - name: Verify deployment
      run: |
        if [ -f "contract-address.json" ]; then
          echo "✅ Contract deployed successfully"
          cat contract-address.json
        else
          echo "❌ Contract deployment failed"
          exit 1
        fi

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level=high
      continue-on-error: true
      
    - name: Install Slither
      run: pip3 install slither-analyzer
      continue-on-error: true
      
    - name: Run Slither analysis
      run: |
        npm run compile
        slither . --filter-paths "node_modules|test" --exclude-dependencies
      continue-on-error: true